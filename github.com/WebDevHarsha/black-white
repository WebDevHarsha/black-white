{
  "metadata": {
    "name": "New JSNB",
    "language_info": {
      "name": "JavaScipt",
      "version": "8.0"
    }
  },
  "jsnbversion": "v0.1",
  "cells": [
    {
      "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Three.js Shooting Game with Camera Background</title>\n    <style>\n        html, body {\n            margin: 0;\n            height: 100%;\n            overflow: auto;\n            position: relative;\n        }\n        video {\n            position: fixed;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            object-fit: cover;\n            z-index: 2;\n        }\n        canvas {\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            display: block;\n            z-index: 3;\n        }\n        #crosshair {\n            position: absolute;\n            top: 50%;\n            left: 50%;\n            font-size: 30px;\n            color: red;\n            font-weight: bold;\n            transform: translate(-50%, -50%);\n            pointer-events: none;\n            z-index: 4;\n        }\n        #gameOverContainer {\n            display: none;\n            position: absolute;\n            top: 50%;\n            left: 50%;\n            transform: translate(-50%, -50%);\n            text-align: center;\n            color: white;\n            z-index: 6;\n            background-color: rgba(0, 0, 0, 0.8);\n            padding: 20px;\n            border-radius: 10px;\n        }\n        #restartButton {\n            margin-top: 20px;\n            padding: 10px 20px;\n            font-size: 20px;\n            background-color: #ff4444;\n            color: white;\n            border: none;\n            border-radius: 5px;\n            cursor: pointer;\n            transition: background-color 0.3s;\n        }\n        #restartButton:hover {\n            background-color: #ff6666;\n        }\n        #finalScore {\n            font-size: 48px;\n            margin: 10px 0;\n        }\n        #highScore {\n            font-size: 24px;\n            margin: 10px 0;\n            color: #ffff00;\n        }\n        #multiplierDisplay {\n    display: none;\n    background-color: rgba(0, 0, 0, 0.5);\n    padding: 10px 20px; /* Increased padding for a bigger display */\n    border-radius: 5px;\n    font-size: 36px; /* Increased font size */\n    animation: pulse 1s infinite;\n}\n\n        #countdownDisplay {\n            display: none;\n            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);\n            animation: scale 0.5s ease-in-out;\n        }\n        @keyframes pulse {\n            0% { transform: scale(1); }\n            50% { transform: scale(1.1); }\n            100% { transform: scale(1); }\n        }\n        @keyframes scale {\n            0% { transform: translate(-50%, -50%) scale(0.5); opacity: 0; }\n            100% { transform: translate(-50%, -50%) scale(1); opacity: 1; }\n        }\n        /* Add audio elements with display none */\n        audio {\n            display: none;\n        }\n    </style>\n</head>\n<body>\n    <video id=\"myVideo\" autoplay playsinline muted></video>\n    <div id=\"crosshair\">+</div>\n    \n    <!-- Add audio elements -->\n    <audio id=\"shootSound\" src=\"https://raw.githubusercontent.com/Ayush021-Dev/game-sounds/main/sound-effects-single-gun-shot-247124%20(mp3cut.net).mp3\" preload=\"auto\"></audio>\n    <audio id=\"gameOverSound\" src=\"https://raw.githubusercontent.com/Ayush021-Dev/game-sounds/main/game-over-31-179699.mp3\" preload=\"auto\"></audio>\n    <audio id=\"highScoreSound\" src=\"https://raw.githubusercontent.com/Ayush021-Dev/game-sounds/main/WhatsApp%20Audio%202024-11-10%20at%2021%20(mp3cut.net).mp3\" preload=\"auto\"></audio>\n    <audio id=\"countdownSound\" src=\"https://raw.githubusercontent.com/Ayush021-Dev/game-sounds/main/countdown-122700%20(mp3cut.net).mp3\" preload=\"auto\"></audio>\n    \n    <div id=\"gameOverContainer\">\n        <h1>GAME OVER</h1>\n        <div id=\"finalScore\"></div>\n        <div id=\"highScore\"></div>\n        <button id=\"restartButton\">Play Again</button>\n    </div>\n    \n    <script type=\"module\" src=\"game.js\"></script>\n</body>\n</html>",
      "status": "",
      "output": "\n\n\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Three.js Shooting Game with Camera Background</title>\n    <style>\n        html, body {\n            margin: 0;\n            height: 100%;\n            overflow: auto;\n            position: relative;\n        }\n        video {\n            position: fixed;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            object-fit: cover;\n            z-index: 2;\n        }\n        canvas {\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            display: block;\n            z-index: 3;\n        }\n        #crosshair {\n            position: absolute;\n            top: 50%;\n            left: 50%;\n            font-size: 30px;\n            color: red;\n            font-weight: bold;\n            transform: translate(-50%, -50%);\n            pointer-events: none;\n            z-index: 4;\n        }\n        #gameOverContainer {\n            display: none;\n            position: absolute;\n            top: 50%;\n            left: 50%;\n            transform: translate(-50%, -50%);\n            text-align: center;\n            color: white;\n            z-index: 6;\n            background-color: rgba(0, 0, 0, 0.8);\n            padding: 20px;\n            border-radius: 10px;\n        }\n        #restartButton {\n            margin-top: 20px;\n            padding: 10px 20px;\n            font-size: 20px;\n            background-color: #ff4444;\n            color: white;\n            border: none;\n            border-radius: 5px;\n            cursor: pointer;\n            transition: background-color 0.3s;\n        }\n        #restartButton:hover {\n            background-color: #ff6666;\n        }\n        #finalScore {\n            font-size: 48px;\n            margin: 10px 0;\n        }\n        #highScore {\n            font-size: 24px;\n            margin: 10px 0;\n            color: #ffff00;\n        }\n        #multiplierDisplay {\n    display: none;\n    background-color: rgba(0, 0, 0, 0.5);\n    padding: 10px 20px; /* Increased padding for a bigger display */\n    border-radius: 5px;\n    font-size: 36px; /* Increased font size */\n    animation: pulse 1s infinite;\n}\n\n        #countdownDisplay {\n            display: none;\n            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);\n            animation: scale 0.5s ease-in-out;\n        }\n        @keyframes pulse {\n            0% { transform: scale(1); }\n            50% { transform: scale(1.1); }\n            100% { transform: scale(1); }\n        }\n        @keyframes scale {\n            0% { transform: translate(-50%, -50%) scale(0.5); opacity: 0; }\n            100% { transform: translate(-50%, -50%) scale(1); opacity: 1; }\n        }\n        /* Add audio elements with display none */\n        audio {\n            display: none;\n        }\n    </style>\n\n\n    <video id=\"myVideo\" autoplay=\"\" playsinline=\"\" muted=\"\"></video>\n    <div id=\"crosshair\">+</div>\n    \n    <!-- Add audio elements -->\n    <audio id=\"shootSound\" src=\"https://raw.githubusercontent.com/Ayush021-Dev/game-sounds/main/sound-effects-single-gun-shot-247124%20(mp3cut.net).mp3\" preload=\"auto\"></audio>\n    <audio id=\"gameOverSound\" src=\"https://raw.githubusercontent.com/Ayush021-Dev/game-sounds/main/game-over-31-179699.mp3\" preload=\"auto\"></audio>\n    <audio id=\"highScoreSound\" src=\"https://raw.githubusercontent.com/Ayush021-Dev/game-sounds/main/mixkit-winning-notification-2018.mp3\" preload=\"auto\"></audio>\n    <audio id=\"countdownSound\" src=\"https://raw.githubusercontent.com/Ayush021-Dev/game-sounds/main/countdown-122700%20(mp3cut.net).mp3\" preload=\"auto\"></audio>\n    \n    <div id=\"gameOverContainer\">\n        <h1>GAME OVER</h1>\n        <div id=\"finalScore\"></div>\n        <div id=\"highScore\"></div>\n        <button id=\"restartButton\">Play Again</button>\n    </div>\n    \n    <script type=\"module\" src=\"game.js\"></script>\n\n",
      "type": "html"
    },
    {
      "code": "var importThree = import('https://cdn.skypack.dev/three@0.132.2');\n\n// Game state variables\nvar score = 0;\nvar timeRemaining = 30;\nvar gameActive = false;  // Changed to false initially for countdown\nvar highScore = localStorage.getItem('highScore') || 0;\nvar timerInterval;\nvar scene, camera, renderer, light;\nvar targets = [];\nvar bullets = [];\nvar THREE;\nvar streak = 0;\nvar multiplier = 1;\nvar lastHitTime = 0;\nvar countdownActive = true;\n\n// Sound elements\nvar sounds = {\n    shoot: document.getElementById('shootSound'),\n    gameOver: document.getElementById('gameOverSound'),\n    newHighScore: document.getElementById('highScoreSound'),\n    countdown: document.getElementById('countdownSound')\n};\nfunction createBlastEffect(position) {\n    var blastGeometry = new THREE.SphereGeometry(0.1, 8, 8);\n    var blastMaterial = new THREE.MeshBasicMaterial({ color: 0xffff00 });\n    \n    var particles = [];\n    for (var i = 0; i < 30; i++) {\n        var particle = new THREE.Mesh(blastGeometry, blastMaterial);\n        particle.position.copy(position);\n        \n        // Give random velocity for the blast\n        particle.velocity = new THREE.Vector3(\n            (Math.random() - 0.5) * 2,\n            (Math.random() - 0.5) * 2,\n            (Math.random() - 0.5) * 2\n        );\n        \n        scene.add(particle);\n        particles.push(particle);\n    }\n    \n    // Animate the particles\n    function animateParticles() {\n        for (var i = particles.length - 1; i >= 0; i--) {\n            particles[i].position.add(particles[i].velocity);\n            particles[i].velocity.multiplyScalar(0.95); // Gradually slow down\n\n            if (particles[i].velocity.length() < 0.01) {\n                scene.remove(particles[i]);\n                particles.splice(i, 1);\n            }\n        }\n\n        if (particles.length > 0) {\n            requestAnimationFrame(animateParticles);\n        }\n    }\n\n    animateParticles();\n}\n\n// Initialize game elements\nfunction initGame() {\n    importThree.then(function(threeModule) {\n        THREE = threeModule;\n        // Scene setup\n        scene = new THREE.Scene();\n        camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n        renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true });\n        renderer.setSize(window.innerWidth, window.innerHeight);\n        renderer.setClearColor(0x000000, 0);\n        document.body.appendChild(renderer.domElement);\n\n        // Lighting\n        light = new THREE.DirectionalLight(0xffffff, 1);\n        light.position.set(10, 10, 10).normalize();\n        scene.add(light);\n\n        // Start the full game initialization\n        startGameElements();\n    });\n}\n\n// Initialize camera access\nfunction initCamera() {\n    var video = document.getElementById('myVideo');\n    navigator.mediaDevices.getUserMedia({ video: { facingMode: \"environment\" } })\n        .then(function(cameraStream) {\n            video.srcObject = cameraStream;\n        })\n        .catch(function(error) {\n            console.error('Error accessing camera:', error.message);\n        });\n}\n\n// Create UI elements\nfunction createUIElements() {\n    // Score display\n    var scoreDisplay = document.createElement('div');\n    scoreDisplay.id = 'scoreDisplay';\n    scoreDisplay.style.position = 'absolute';\n    scoreDisplay.style.top = '20px';\n    scoreDisplay.style.left = '20px';\n    scoreDisplay.style.color = 'white';\n    scoreDisplay.style.fontSize = '24px';\n    scoreDisplay.style.fontFamily = 'Arial';\n    scoreDisplay.style.zIndex = '5';\n    document.body.appendChild(scoreDisplay);\n\n    // Timer display\n    var timerDisplay = document.createElement('div');\n    timerDisplay.id = 'timerDisplay';\n    timerDisplay.style.position = 'absolute';\n    timerDisplay.style.top = '20px';\n    timerDisplay.style.right = '20px';\n    timerDisplay.style.color = 'white';\n    timerDisplay.style.fontSize = '24px';\n    timerDisplay.style.fontFamily = 'Arial';\n    timerDisplay.style.zIndex = '5';\n    document.body.appendChild(timerDisplay);\n\n    // Multiplier display\n    var multiplierDisplay = document.createElement('div');\n    multiplierDisplay.id = 'multiplierDisplay';\n    multiplierDisplay.style.position = 'absolute';\n    multiplierDisplay.style.top = '60px';\n    multiplierDisplay.style.left = '20px';\n    multiplierDisplay.style.color = '#ffff00';\n    multiplierDisplay.style.fontSize = '20px';\n    multiplierDisplay.style.fontFamily = 'Arial';\n    multiplierDisplay.style.zIndex = '5';\n    document.body.appendChild(multiplierDisplay);\n\n    // Countdown display\n    var countdownDisplay = document.createElement('div');\n    countdownDisplay.id = 'countdownDisplay';\n    countdownDisplay.style.position = 'absolute';\n    countdownDisplay.style.top = '50%';\n    countdownDisplay.style.left = '50%';\n    countdownDisplay.style.transform = 'translate(-50%, -50%)';\n    countdownDisplay.style.color = 'white';\n    countdownDisplay.style.fontSize = '72px';\n    countdownDisplay.style.fontFamily = 'Arial';\n    countdownDisplay.style.zIndex = '6';\n    document.body.appendChild(countdownDisplay);\n}\n\n// Create target\nfunction createTarget() {\n    var targetGeometry = new THREE.SphereGeometry(0.5, 16, 16);\n    var targetMaterial = new THREE.MeshStandardMaterial({ color: 0xff0000 });\n    var target = new THREE.Mesh(targetGeometry, targetMaterial);\n    target.position.x = Math.random() * 10 - 5;\n    target.position.y = Math.random() * 5 - 2.5;\n    target.position.z = -10 - Math.random() * 10;\n    scene.add(target);\n    targets.push(target);\n}\n\n// Initialize targets\nfunction initTargets() {\n    for (var i = 0; i < 5; i++) {\n        createTarget();\n    }\n}\n\n// Handle shooting\nfunction initShooting() {\n    var bulletGeometry = new THREE.SphereGeometry(0.1, 8, 8);\n    var bulletMaterial = new THREE.MeshBasicMaterial({ color: 0xffff00 });\n\n    window.addEventListener('click', function(event) {\n        if (!gameActive) return;\n        \n        // Play shooting sound\n        sounds.shoot.currentTime = 0;\n        sounds.shoot.play().catch(e => console.log('Error playing sound:', e));\n        \n        var bullet = new THREE.Mesh(bulletGeometry, bulletMaterial);\n        bullet.position.set(camera.position.x, camera.position.y, camera.position.z);\n        bullet.velocity = new THREE.Vector3(0, 0, -1).applyEuler(camera.rotation);\n        scene.add(bullet);\n        bullets.push(bullet);\n    }, { passive: true });\n}\n\n// Initialize gyroscope\nfunction initGyroscope() {\n    if ('Gyroscope' in window) {\n        var gyroscope = new Gyroscope({ frequency: 60 });\n\n        gyroscope.addEventListener('reading', function() {\n            if (!gameActive) return;\n            \n            var sensitivity = 0.02;\n            var maxRotationSpeed = 0.1;\n\n            camera.rotation.x += Math.min(gyroscope.x * sensitivity, maxRotationSpeed);\n            camera.rotation.y += Math.min(gyroscope.y * sensitivity, maxRotationSpeed);\n            camera.rotation.z += Math.min(gyroscope.z * sensitivity, maxRotationSpeed);\n        });\n\n        gyroscope.start();\n    } else {\n        alert('Gyroscope not supported on this device/browser.');\n    }\n}\n\n// Start countdown\nfunction startCountdown() {\n    let count = 3;\n  sounds.countdown.currentTime = 0;\n            sounds.countdown.play().catch(e => console.log('Error playing countdown:', e));\n    const countdownDisplay = document.getElementById('countdownDisplay');\n    countdownDisplay.style.display = 'block';\n    \n    function updateCountdown() {\n        if (count > 0) {\n            countdownDisplay.textContent = count;\n            \n            count--;\n            setTimeout(updateCountdown, 1000);\n        } else {\n            countdownDisplay.textContent = 'GO!';\n            setTimeout(() => {\n                countdownDisplay.style.display = 'none';\n                gameActive = true;\n                countdownActive = false;\n                timerInterval = setInterval(updateTimer, 1000);\n            }, 1000);\n        }\n    }\n    \n    updateCountdown();\n}\n\n// Update multiplier\nfunction updateMultiplier() {\n    const currentTime = Date.now();\n    if (currentTime - lastHitTime < 1500) { // 1.5 seconds window for streak\n        streak++;\n        if (streak > 2) {\n            multiplier = Math.min(4, Math.floor(streak / 2)); // Cap multiplier at 4x\n        }\n    } else {\n        streak = 1;\n        multiplier = 1;\n    }\n    lastHitTime = currentTime;\n    \n    // Update multiplier display\n    const multiplierDisplay = document.getElementById('multiplierDisplay');\n    if (multiplier > 1) {\n        multiplierDisplay.textContent = `${multiplier}x Multiplier! (${streak} streak)`;\n        multiplierDisplay.style.display = 'block';\n    } else {\n        multiplierDisplay.style.display = 'none';\n    }\n}\n\n// Update timer\nfunction updateTimer() {\n    if (!gameActive) return;\n    \n    timeRemaining--;\n    document.getElementById('timerDisplay').textContent = 'Time: ' + timeRemaining + 's';\n    \n    if (timeRemaining <= 0) {\n        gameActive = false;\n        endGame();\n    }\n}\n\n// End game\nfunction endGame() {\n    clearInterval(timerInterval);\n\n   \n    \n    // Update high score and play sound if new high score\n    if (score > highScore) {\n        highScore = score;\n        localStorage.setItem('highScore', highScore);\n        // Play new high score sound\n        sounds.newHighScore.play().catch(e => console.log('Error playing sound:', e));\n    }else{\n\t   sounds.gameOver.play().catch(e => console.log('Error playing sound:', e));\n\t}\n    \n    // Show game over container\n    var gameOverContainer = document.getElementById('gameOverContainer');\n    gameOverContainer.style.display = 'block';\n    \n    // Update final score and high score\n    document.getElementById('finalScore').textContent = 'Final Score: ' + score;\n    document.getElementById('highScore').textContent = 'High Score: ' + highScore;\n}\n\n// Restart game\nfunction restartGame() {\n    // Reset game state\n    score = 0;\n    timeRemaining = 30;\n    gameActive = false;\n    streak = 0;\n    multiplier = 1;\n    countdownActive = true;\n    \n    // Clear existing targets and bullets\n    for (var i = targets.length - 1; i >= 0; i--) {\n        scene.remove(targets[i]);\n    }\n    for (var i = bullets.length - 1; i >= 0; i--) {\n        scene.remove(bullets[i]);\n    }\n    targets = [];\n    bullets = [];\n    \n    // Reset UI\n    document.getElementById('gameOverContainer').style.display = 'none';\n    document.getElementById('scoreDisplay').textContent = 'Score: 0';\n    document.getElementById('timerDisplay').textContent = 'Time: 10s';\n    document.getElementById('multiplierDisplay').style.display = 'none';\n    \n    // Initialize new targets\n    initTargets();\n    \n    // Start countdown\n    startCountdown();\n}\n\n// Handle window resize\nfunction handleResize() {\n    window.addEventListener('resize', function() {\n        renderer.setSize(window.innerWidth, window.innerHeight);\n        camera.aspect = window.innerWidth / window.innerHeight;\n        camera.updateProjectionMatrix();\n    }, { passive: true });\n}\n\n// Animation loop\nfunction animate() {\n    requestAnimationFrame(animate);\n\n    document.getElementById('scoreDisplay').textContent = 'Score: ' + score;\n\n    if (gameActive) {\n        // Update bullets\n        for (var i = bullets.length - 1; i >= 0; i--) {\n            bullets[i].position.add(bullets[i].velocity);\n            if (bullets[i].position.z < -50) {\n                scene.remove(bullets[i]);\n                bullets.splice(i, 1);\n            }\n        }\n\n        // Check collisions\n        for (var i = bullets.length - 1; i >= 0; i--) {\n    for (var j = targets.length - 1; j >= 0; j--) {\n        var distance = bullets[i].position.distanceTo(targets[j].position);\n        if (distance < 0.5) {\n            // Create a blast effect at the target's position\n            createBlastEffect(targets[j].position);\n\n            scene.remove(targets[j]);\n            targets.splice(j, 1);\n            scene.remove(bullets[i]);\n            bullets.splice(i, 1);\n\n            updateMultiplier();\n            score += 100 * multiplier;\n            createTarget();\n            break;\n        }\n    }\n}\n\n    }\n\n    renderer.render(scene, camera);\n}\n\n// Initialize all game elements\nfunction startGameElements() {\n    createUIElements();\n    initCamera();\n    initTargets();\n    initShooting();\n    initGyroscope();\n    handleResize();\n    \n    // Start countdown instead of immediately starting the game\n    startCountdown();\n    \n    // Start animation loop\n    animate();\n    \n    // Add restart button listener\n    document.getElementById('restartButton').addEventListener('click', restartGame);\n}\n\n// Start the game when the page loads\ninitGame();",
      "status": "[4]<br><span style=\"font-size:8px\">0ms<span></span></span>",
      "output": "",
      "type": "code"
    }
  ],
  "source": "https://github.com/gopi-suvanam/jsnb",
  "run_on_load": false
}